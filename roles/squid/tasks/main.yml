# Compile Squid
- name: Copy Squid packages
  copy:
    src: compilation-scripts/
    dest: /tmp/squid/

- name: Changing permissions
  file: dest=/tmp/squid/{{ item }} mode=a+x
  with_items:
  - 01_tools.sh
  - 02_build_ecap.sh
  - 03_install_ecap.sh
  - 04_build_squid.sh
  - 05_install_squid.sh

- name: Installing tools
  command: /tmp/squid/01_tools.sh
  become: yes

- name: Build ecap
  command: /tmp/squid/02_build_ecap.sh

- name: Install ecap
  command: /tmp/squid/03_install_ecap.sh
  become: yes

- name: Build Squid
  command: /tmp/squid/04_build_squid.sh

# Install Squid
- name: Install Squid
  command: /tmp/squid/05_install_squid.sh
  become: yes

# Configure Squid
- name: Copy Squid config
  become: yes
  copy:
    src: configuration/squid.conf
    dest: /etc/squid/

- name: Copy Squid allowed_sites
  become: yes
  copy:
    src: configuration/allowed_sites.txt
    dest: /etc/squid/

- name: Create Squid certificate directory
  become: yes
  file: path=/etc/squid/ssl_cert state=directory

- name: Create Squid certificate
  become: yes
  command: openssl req -new -newkey rsa:2048 -sha256 -days 3650 -nodes -x509 -extensions v3_ca -keyout /etc/squid/ssl_cert/squid.pem  -out /etc/squid/ssl_cert/squid.pem -subj "/C=UK/ST=London/L=London/O=10x/OU=FT5/CN=ssl.squid.10xbanking.com"

- name: Initialise Squid certificate db
  become: yes
  command: /usr/lib/squid/security_file_certgen -c -s /var/spool/squid/ssl_db -M 4MB

- iptables:
    table: nat
    chain: PREROUTING
    in_interface: eth0
    protocol: tcp
    match: tcp
    destination_port: 80
    source: 10.0.0.0/8,192.168.0.0/16,172.16.0.0/12
    jump: REDIRECT
    to_ports: 3128
    comment: Redirect HTTP traffic to port 3128
  become: yes

- iptables:
    table: nat
    chain: PREROUTING
    in_interface: eth0
    protocol: tcp
    match: tcp
    destination_port: 443
    source: 10.0.0.0/8,192.168.0.0/16,172.16.0.0/12
    jump: REDIRECT
    to_ports: 3129
    comment: Redirect HTTPS traffic to port 3129
  become: yes

- name: Install `netfilter-persistent` && `iptables-persistent` packages
  package:
    name: "{{item}}"
    state: present
  with_items:
      - iptables-persistent
      - netfilter-persistent
  when: ansible_os_family == "Debian"
  become: true

- name: Remove tmp files
  file: path=/tmp/squid/ state=absent

- name: Start Squid
  become: yes
  service:
    name: squid
    state: started